{"version":3,"sources":["assets/logo/livechat_logo.svg","components/FormInfo/index.js","components/Button/index.js","components/LoginForm/validateForm.js","api/mock.js","components/TextInputControl/index.js","components/LoginForm/index.js","actions/index.js","actions/types.js","components/LoginForm/useFormValidation.js","assets/check-mark.svg","components/MainContent/index.js","components/ContentCard/index.js","components/App/index.js","serviceWorker.js","reducers/formAuthReducer.js","index.js"],"names":["module","exports","FormInfo","className","src","LiveChatLogo","alt","Button","disabled","text","type","onClick","validateForm","values","errors","email","test","password","length","user","Promise","resolve","reject","setTimeout","mockedUser","id","isSignedIn","message","TextInputControl","name","handleChange","handleBlur","value","touched","htmlFor","onChange","onBlur","INITIAL_STATE","rememberMe","connect","signIn","userId","payload","initialState","validate","authenticateUser","useState","formData","setFormData","setErrors","isSubmitting","setSubmitting","setTouched","useEffect","validationErrors","handleSubmit","event","preventDefault","target","prevState","useFormValidation","authenticationError","setAuthenticationError","a","login","then","res","catch","err","resetAuthError","Logo","onSubmit","for","checked","Object","keys","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","xmlnsSvgjs","width","height","x","y","viewBox","style","enableBackground","xmlSpace","ref","xmlns","d","fill","ForwardRef","forwardRef","signOut","state","App","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","applyMiddleware","reduxThunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.42d72482.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/livechat_logo.2e2e0c47.svg\";","import React from 'react';\r\nimport LiveChatLogo from \"../../assets/logo/livechat_logo.svg\";\r\nimport './formInfo.scss';\r\n\r\nconst FormInfo = () => {\r\n  return(\r\n    <div className=\"form-info-container\" >\r\n      <img src={LiveChatLogo} alt=\"\"/>\r\n      <p className=\"info-text\">Understand Better</p>\r\n      <p className=\"info-text\">Communicate Better</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormInfo;","import React from 'react';\r\n\r\nimport './button.scss'\r\n\r\nconst Button = ({ disabled = false, text = 'Button', type = \"button\", onClick }) => {\r\n  return (<button type={type} disabled={disabled} onClick={onClick} className=\"form-button\">{text}</button>)\r\n}\r\n\r\nexport default Button;  ","export default function validateForm(values) {\r\n  const errors = {};\r\n\r\n  //email validation\r\n  if (!values.email) errors.email = \"Email is required\";\r\n  else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  //password validation\r\n  if (!values.password) errors.password = \"Please enter a password\";\r\n  else {\r\n    if (values.password.length < 6) {\r\n      errors.password = \"Password must be at least 6 characteres\";\r\n    } else if (\r\n      !/(?=.*[a-z])/g.test(values.password) ||  //at least one small letter\r\n      !/(?=.*[A-Z])/g.test(values.password) ||  //at least one big letter\r\n      !/(?=.*\\d)/g.test(values.password)) {     //at least one digi\r\n      errors.password = \"Password must contain at least one small letter, one big letter, and one digit\"\r\n    }\r\n  }\r\n  return errors;\r\n}\r\n","export default (user) => new Promise((resolve, reject) => {\r\n\tsetTimeout(() => {\r\n\t\tconst mockedUser = {\r\n\t\t\temail: 'test@test.pl',\r\n\t\t\tpassword: 'Password1',\r\n\t\t};\r\n\t\tif (user.email === mockedUser.email && user.password === mockedUser.password) {\r\n\t\t\tresolve({ id: 1, isSignedIn: true });\r\n\t\t} else {\r\n\t\t\tconst message = user.email === mockedUser.email ? \"Password not correct\" : \"User is not Present\";\r\n\t\t\treject({isSignedIn: false, message});\r\n\t\t}\r\n\t}, 1000);\r\n});","import React from 'react';\r\nimport './textIputControl.scss'\r\n\r\nconst TextInputControl = ({ type = 'text', name, handleChange, handleBlur, value, touched, errors }) => {\r\n  return (<>\r\n    <label htmlFor={`${name}Input`}>{name}</label>\r\n    <input\r\n      name={name}\r\n      type={type}\r\n      id={`${name}Input`}\r\n      className={errors[name] && touched[name] && \"error-input\"}\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n      value={value}\r\n    />\r\n    {errors[name] && touched[name] && (<p className=\"error-msg\">{errors[name]}</p>)}\r\n  </>)\r\n}\r\n\r\nexport default TextInputControl;","import React, { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../actions';\r\nimport Button from \"../Button\";\r\nimport useFormValidation from \"./useFormValidation\";\r\nimport validateForm from \"./validateForm\";\r\nimport login from \"../../api/mock\";\r\nimport TextInputConrol from '../TextInputControl';\r\nimport Logo from \"../../assets/logo/livechat_logo.svg\";\r\nimport \"./loginForm.scss\";\r\n\r\nconst INITIAL_STATE = { email: \"\", password: \"\", rememberMe: true };\r\n\r\nconst LoginForm = ({ signIn }) => {\r\n\tconst {\r\n\t\thandleSubmit,\r\n\t\thandleChange,\r\n\t\thandleBlur,\r\n\t\tformData,\r\n\t\terrors,\r\n\t\tisSubmitting,\r\n\t\tsetSubmitting,\r\n\t\ttouched\r\n\t} = useFormValidation(INITIAL_STATE, validateForm, authenticateUser);\r\n\tconst [authenticationError, setAuthenticationError] = useState(null);\r\n\r\n\tasync function authenticateUser() {\r\n\t\tconst user = formData;\r\n\t\ttry {\r\n\t\t\tawait login(user)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsignIn(res);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\tsetAuthenticationError(err.message);\r\n\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t\tresetAuthError()\r\n\t\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tsetAuthenticationError(err.message);\r\n\t\t\tsetSubmitting(false);\r\n\t\t}\r\n\t}\r\n\r\n\tconst resetAuthError = () => {\r\n\t\tsetTimeout(() => setAuthenticationError(null), 5000)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"form-control-container\">\r\n\t\t\t<h1>Login to <span className=\"company-title\">LiveChat</span><img src={Logo} className=\"company-logo\" /></h1>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<TextInputConrol\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\thandleBlur={handleBlur}\r\n\t\t\t\t\tvalue={formData.email}\r\n\t\t\t\t\terrors={errors}\r\n\t\t\t\t\ttouched={touched}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInputConrol\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\thandleBlur={handleBlur}\r\n\t\t\t\t\tvalue={formData.password}\r\n\t\t\t\t\terrors={errors}\r\n\t\t\t\t\ttouched={touched}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"button-container\">\r\n\t\t\t\t\t<label for='rememberMe' className=\"chk-container\"> Remember Me\r\n\t\t\t\t\t\t<input value={formData.rememberMe} checked={formData.rememberMe} onChange={handleChange} id='rememberMe' name=\"rememberMe\" type=\"checkbox\" />\r\n\t\t\t\t\t\t<span className=\"checkmark\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\ttext=\"Sign In\"\r\n\t\t\t\t\t\tdisabled={Object.keys(errors).length || isSubmitting ? \"disabled\" : \"\"}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{authenticationError && (\r\n\t\t\t\t\t<p className=\"error-msg\">{authenticationError}</p>\r\n\t\t\t\t)}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default connect(null, { signIn })(LoginForm);\r\n","import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n} from \"./types\";\r\n\r\nexport const signIn = (userId) => ({\r\n  type: SIGN_IN,\r\n  payload: userId,\r\n});\r\n\r\nexport const signOut = () => ({\r\n  type: SIGN_OUT,\r\n});\r\n","export const SIGN_IN = \"SIGN IN\";\r\nexport const SIGN_OUT = \"SIGN OUT\";","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFormValidation(initialState, validate, authenticateUser) {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const [touched, setTouched] = useState({});\r\n\r\n  useEffect(() => {\r\n    const validationErrors = validate(formData);\r\n    setErrors(validationErrors);\r\n  }, [formData]);\r\n\r\n  const handleChange = ({ target: { type, value, name } }) => {\r\n    if (type === \"checkbox\") { setFormData(prevState=>({ ...prevState, [name]: !prevState[name] }))}\r\n    else {\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  }\r\n}\r\n\r\nconst handleBlur = ({ target: { value, name } }) => {\r\n  setTouched({ ...touched, [name]: true });\r\n  setFormData({ ...formData })\r\n}\r\n\r\nconst handleSubmit = (event) => {\r\n  event.preventDefault();\r\n  setSubmitting(true);\r\n  authenticateUser();\r\n}\r\n\r\nreturn { handleSubmit, handleChange, handleBlur, formData, errors, touched, isSubmitting, setSubmitting };\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgCheckMark = function SvgCheckMark(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlnsSvgjs: \"http://svgjs.com/svgjs\",\n    width: 512,\n    height: 512,\n    x: 0,\n    y: 0,\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    className: \"\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    d: \"m369.164062 174.769531c7.8125 7.8125 7.8125 20.476563 0 28.285157l-134.171874 134.175781c-7.8125 7.808593-20.472657 7.808593-28.285157 0l-63.871093-63.875c-7.8125-7.808594-7.8125-20.472657 0-28.28125 7.808593-7.8125 20.472656-7.8125 28.28125 0l49.730468 49.730469 120.03125-120.035157c7.8125-7.808593 20.476563-7.808593 28.285156 0zm142.835938 81.230469c0 141.503906-114.515625 256-256 256-141.503906 0-256-114.515625-256-256 0-141.503906 114.515625-256 256-256 141.503906 0 256 114.515625 256 256zm-40 0c0-119.394531-96.621094-216-216-216-119.394531 0-216 96.621094-216 216 0 119.394531 96.621094 216 216 216 119.394531 0 216-96.621094 216-216zm0 0\",\n    fill: \"#ff7b2d\",\n    \"data-original\": \"#000000\",\n    style: {},\n    className: \"\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheckMark, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check-mark.53bc8dd6.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport LiveChatLogo from \"../../assets/logo/livechat_logo.svg\";\r\nimport { ReactComponent as UserLoggedIco } from '../../assets/check-mark.svg';\r\nimport Button from '../Button';\r\nimport { signOut } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport './mainContent.scss';\r\n\r\nconst MainContent = ({ signOut }) => {\r\n  return (\r\n    <div className=\"logged-content-container\">\r\n      <img className='logo' src={LiveChatLogo} alt=\"\" />\r\n      <div className=\"content-info\">\r\n        <UserLoggedIco width={30} height={30} />\r\n        <h1>User Logged in</h1>\r\n      </div>\r\n        <Button text=\"Sign Out\" onClick={signOut} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(null, { signOut })(MainContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FormInfo from '../FormInfo';\r\nimport LoginForm from '../LoginForm';\r\nimport MainContent from '../MainContent';\r\nimport './contentCard.scss';\r\n\r\nconst ContentCard = ({ isSignedIn }) => {\r\n  return (\r\n    <div className=\"form-card-container\">\r\n      {isSignedIn ? (<MainContent />) :\r\n        (<>\r\n          <LoginForm />\r\n          <FormInfo />\r\n        </>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state\r\n})\r\nexport default connect(mapStateToProps)(ContentCard);","import React from 'react';\r\nimport ContentCard from '../ContentCard';\r\n\r\nimport './app.scss'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"main-container\">\r\n      <ContentCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  userId: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload }\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducer from './reducers/formAuthReducer';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport './styles/main.scss';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}